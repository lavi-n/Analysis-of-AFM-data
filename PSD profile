import csv
import sys
import math as ma
print("Give normalising factor for x, y and z (in nm): ")
ax = float(input())
ay = float(input())
az = float(input())
datapoints = 65536
print("Give start, step and stop frequencies (in 1/micron): ")
start, step, stop = float(input()), float(input()), float(input())
if stop<start:
     print("Stop value has to be greater than start value")
     sys.exit()
print("Provide input for fractal model: ")
kn = float(input("Spectral strength kn"))
nu = float(input("Give spectral indices (1-3)"))
if nu <1 or nu>3:
     print("Invalid input")
     sys.exit()
print("Provide input parameters for k-corelation or ABC model")
a = float(input("Give parameter a"))
b = float(input("Give parameter b"))
c = float(input("Give parameter c"))
yorn = input("Do you want to fit Gaussian PSD model? (Y/N)")
if yorn in "yY":
     print("Give sig, tau and fsh:")
     sig, tau, fsh = float(input()), float(input()), float(input())
     fsh = fsh*0.001
ff = start
list7 = []
fflist = []
psd1list = []
psd2list = []
psd3list = []
psdlist = []
while(ff <= stop):
     psd1 = kn/(ff**nu)
     psd1list = psd1list + [psd1]
     psd2 = a/(((1+(b**2)*(ff**2)))**(0.5*(c+1)))
     psd2list = psd2list + [psd2]
     ap = 3.14*3.14*tau*tau*((ff-fsh)**2)
     psd3 = 3.14*sig*sig*tau*tau*ma.exp(-ap)
     psd3list = psd3list + [psd3]
     psd = psd1 + psd2+ psd3
     psdlist = psdlist + [psd]
     print(ff,psd1,psd2,psd3,psd)
     ff = ff + step
     fflist = fflist + [ff]
     with open('text.csv', 'w', newline='') as n:
         csv_app = csv.writer(n, delimiter=',')
         for one, two, three, four, five in zip(fflist, psd1list, psd2list, psd3list, psdlist):
             csv_app.writerow([one, None, two, None, three, None, four, None, five])
